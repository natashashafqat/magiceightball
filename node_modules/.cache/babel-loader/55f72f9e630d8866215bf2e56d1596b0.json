{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\n// import Layout from '../components/MyLayout.js'\nimport Header from '../components/Header.js';\nimport Link from 'next/link';\nimport { Component } from \"react\";\nimport { spring } from 'popmotion';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      count: 0\n    };\n    _this.answer = 'Testing';\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"increaseCounter\",\n    value: function increaseCounter(type) {\n      this.setState(function (prevState) {\n        return {\n          count: type == 'increase' ? prevState.count + 1 : prevState.count - 1\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"main\", null, React.createElement(Header, null), React.createElement(\"h1\", {\n        style: {\n          fontFamily: \"Arial\",\n          fontSize: \"50px\"\n        }\n      }, \"Magic 8 Ball\"), React.createElement(\"form\", {\n        className: \"question-input\",\n        method: \"POST\",\n        action: \"/\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"inputquestion\",\n        placeholder: \"Ask your question...\",\n        style: {\n          width: \"300px\",\n          fontSize: 18\n        }\n      }), React.createElement(\"button\", {\n        onClick: this.increaseCounter.bind(this, 'increase'),\n        id: \"submitquestion\",\n        style: {\n          width: \"100px\",\n          fontSize: 17\n        }\n      }, \"Shake Me!\")), React.createElement(\"p\", null, \"Answer: \", this.answer), React.createElement(\"p\", null, \"Count: \", this.state.count));\n    }\n  }]);\n\n  return App;\n}(Component);","map":{"version":3,"sources":["/Users/natashashafqat/fullstack/magic/pages/App.js"],"names":["Header","Link","Component","spring","App","props","state","count","answer","type","setState","prevState","fontFamily","fontSize","width","increaseCounter","bind"],"mappings":";;;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;;IAEMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,UAAKC,MAAL,GAAc,SAAd;AALe;AAMlB;;;;oCAEeC,I,EAAK;AACnB,WAAKC,QAAL,CAAc,UAAAC,SAAS,EAAI;AACxB,eAAO;AAACJ,UAAAA,KAAK,EAAEE,IAAI,IAAI,UAAR,GAAqBE,SAAS,CAACJ,KAAV,GAAkB,CAAvC,GAA0CI,SAAS,CAACJ,KAAV,GAAkB;AAApE,SAAP;AACF,OAFD;AAGH;;;6BAEU;AACP,aACE,kCACE,oBAAC,MAAD,OADF,EAGE;AAAI,QAAA,KAAK,EAAE;AAAEK,UAAAA,UAAU,EAAC,OAAb;AAAsBC,UAAAA,QAAQ,EAAC;AAA/B;AAAX,wBAHF,EAKE;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAiC,QAAA,MAAM,EAAC,MAAxC;AAA+C,QAAA,MAAM,EAAC;AAAtD,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAC,eAAvB;AAAuC,QAAA,WAAW,EAAC,sBAAnD;AAAyE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,OAAT;AAAkBD,UAAAA,QAAQ,EAAC;AAA3B;AAAhF,QADF,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKE,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,EAAgC,UAAhC,CAAjB;AAA8D,QAAA,EAAE,EAAC,gBAAjE;AAAkF,QAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAAE,OAAT;AAAkBD,UAAAA,QAAQ,EAAC;AAA3B;AAAzF,qBAFF,CALF,EAUE,2CAAY,KAAKL,MAAjB,CAVF,EAYE,0CAAW,KAAKF,KAAL,CAAWC,KAAtB,CAZF,CADF;AAiBD;;;;EAlCeL,S","sourcesContent":["// import Layout from '../components/MyLayout.js'\nimport Header from '../components/Header.js'\nimport Link from 'next/link'\nimport { Component } from \"react\";\nimport { spring } from 'popmotion';\n\nclass App extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        count: 0\n      }\n      this.answer = 'Testing';\n  }\n\n  increaseCounter(type){\n    this.setState(prevState => {\n       return {count: type == 'increase' ? prevState.count + 1: prevState.count - 1}\n    });\n}\n\n  render() {\n    return (\n      <main>\n        <Header />\n\n        <h1 style={{ fontFamily:\"Arial\", fontSize:\"50px\" }}>Magic 8 Ball</h1>\n\n        <form className=\"question-input\" method=\"POST\" action=\"/\">\n          <input type=\"text\" ref=\"inputquestion\" placeholder=\"Ask your question...\"style={{ width: \"300px\", fontSize:18 }}/>\n          <button onClick={this.increaseCounter.bind(this, 'increase')} id=\"submitquestion\" style={{ width: \"100px\", fontSize:17 }}>Shake Me!</button>\n        </form>\n\n        <p>Answer: {this.answer}</p>\n\n        <p>Count: {this.state.count}</p>\n\n      </main>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}