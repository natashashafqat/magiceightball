{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\n// import Layout from '../components/MyLayout.js'\nimport Header from '../components/Header.js';\nimport Link from 'next/link';\nimport { Component } from \"react\";\nimport { spring } from 'popmotion';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      count: 0\n    };\n    _this.answer = 'Testing';\n    _this.incrementCounter = _this.incrementCounter.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        count: _parseInt(localStorage.getItem(\"count\")) || 0\n      });\n    }\n  }, {\n    key: \"incrementCounter\",\n    value: function incrementCounter() {\n      var count = this.state.count + 1;\n      localStorage.setItem(\"count\", count);\n      this.setState({\n        count: count\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      console.log('RECEIVED.');\n      event.preventDefault();\n      fetch('/', {\n        method: 'POST'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"main\", null, React.createElement(Header, null), React.createElement(\"h1\", {\n        style: {\n          fontFamily: \"Arial\",\n          fontSize: \"50px\"\n        }\n      }, \"Magic 8 Ball\"), React.createElement(\"form\", {\n        className: \"question-input\",\n        method: \"POST\",\n        action: \"/\"\n      }, React.createElement(TextField, {\n        id: \"inputquestion\",\n        placeholder: \"Ask your question...\",\n        margin: \"normal\"\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.incrementCounter.bind(this),\n        id: \"submitquestion\",\n        style: {\n          width: \"100px\",\n          fontSize: 17\n        }\n      }, \"Shake Me!\")), React.createElement(\"p\", null, \"Answer: \", this.answer), React.createElement(\"p\", null, \"Count: \", this.state.count));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/natashashafqat/fullstack/magic/pages/App.js"],"names":["Header","Link","Component","spring","TextField","Button","App","props","state","count","answer","incrementCounter","bind","handleSubmit","setState","localStorage","getItem","setItem","event","console","log","preventDefault","fetch","method","fontFamily","fontSize","width"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;IAEMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,UAAKC,MAAL,GAAc,SAAd;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,+BAAxB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB;AAPiB;AAQlB;;;;wCAEmB;AAClB,WAAKE,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAE,UAASM,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAT,KAA2C;AADtC,OAAd;AAGD;;;uCAEkB;AACjB,UAAMP,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,GAAmB,CAAjC;AACAM,MAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BR,KAA9B;AACA,WAAKK,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAEA;AADK,OAAd;AAGD;;;iCAEYS,K,EAAO;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAF,MAAAA,KAAK,CAACG,cAAN;AACAC,MAAAA,KAAK,CAAC,GAAD,EAAM;AACTC,QAAAA,MAAM,EAAE;AADC,OAAN,CAAL;AAID;;;6BAEQ;AACP,aACE,kCACE,oBAAC,MAAD,OADF,EAEE;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAC,OAAb;AAAsBC,UAAAA,QAAQ,EAAC;AAA/B;AAAX,wBAFF,EAGE;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAiC,QAAA,MAAM,EAAC,MAAxC;AAA+C,QAAA,MAAM,EAAC;AAAtD,SACE,oBAAC,SAAD;AACE,QAAA,EAAE,EAAC,eADL;AAEE,QAAA,WAAW,EAAC,sBAFd;AAGE,QAAA,MAAM,EAAC;AAHT,QADF,EAME,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAE,KAAKd,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAHX;AAIE,QAAA,EAAE,EAAC,gBAJL;AAKE,QAAA,KAAK,EAAE;AAAEc,UAAAA,KAAK,EAAE,OAAT;AAAkBD,UAAAA,QAAQ,EAAC;AAA3B;AALT,qBANF,CAHF,EAiBE,2CAAY,KAAKf,MAAjB,CAjBF,EAkBE,0CAAW,KAAKF,KAAL,CAAWC,KAAtB,CAlBF,CADF;AAsBD;;;;EA1DeP,S;;AA6DlB,eAAeI,GAAf","sourcesContent":["// import Layout from '../components/MyLayout.js'\nimport Header from '../components/Header.js'\nimport Link from 'next/link'\nimport { Component } from \"react\";\nimport { spring } from 'popmotion';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n    this.answer = 'Testing';\n    this.incrementCounter = this.incrementCounter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      count: parseInt(localStorage.getItem(\"count\")) || 0\n    });\n  }\n\n  incrementCounter() {\n    const count = this.state.count + 1;\n    localStorage.setItem(\"count\", count);\n    this.setState({\n      count: count\n    });\n  }\n\n  handleSubmit(event) {\n    console.log('RECEIVED.');\n    event.preventDefault();\n    fetch('/', {\n      method: 'POST'\n      }\n    )\n  }\n\n  render() {\n    return (\n      <main>\n        <Header />\n        <h1 style={{ fontFamily:\"Arial\", fontSize:\"50px\" }}>Magic 8 Ball</h1>\n        <form className=\"question-input\" method=\"POST\" action=\"/\">\n          <TextField\n            id=\"inputquestion\"\n            placeholder=\"Ask your question...\"\n            margin=\"normal\"\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.incrementCounter.bind(this)}\n            id=\"submitquestion\"\n            style={{ width: \"100px\", fontSize:17 }}>Shake Me!\n          </Button>\n        </form>\n        <p>Answer: {this.answer}</p>\n        <p>Count: {this.state.count}</p>\n      </main>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}